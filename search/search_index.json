{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>This is Literally FNF Documentation. Be here or be square, idiot.</p> <ul> <li>Main</li> </ul>"},{"location":"main/songs/","title":"Songs","text":"<p>Main / Songs</p>"},{"location":"main/songs/#songs","title":"Songs","text":"<p>The Songs folder (<code>game.ServerStorage.Game.Stores</code>) stores all the FNF mod song configuration instances.</p> <p>Songs themselves are stored in seperate folders, named after the mod they come from.</p> <p>Song Folder's themselves don't have any attributes, however, song configuration instances do.</p>"},{"location":"main/songs/#song-folder-structure","title":"Song Folder Structure","text":"<ul> <li> <p>Song Instance <sup><code>StringValue</code></sup></p> <ul> <li> <p>Name <sup>(This is the Song's name.)</sup></p> </li> <li> <p>Value <sup><code>string</code> (This is the Song's chart.)</sup></p> </li> <li> <p>Fats_ <sup>(This Folder allows charts to be bigger than the StringValue.Value limit.)</sup></p> </li> <li> <p>MIDIs <sup>(This folder contains values that are used by the MIDI system.)</sup></p> </li> <li> <p>Song Attributes <sup>(Song configuration values.)</sup></p> </li> </ul> </li> </ul>"},{"location":"main/visuals/","title":"Visuals","text":"<p>Main / Visuals</p>"},{"location":"main/visuals/#visuals","title":"Visuals","text":"<p>The Visuals folder (<code>game.ServerStorage.Game.Visuals</code>) stores all the FNF mod assets that has to be streamed to the client.</p> <p>As the name suggests, nearly all of the assets within this folder are related to the game's visuals. One exception of this however, is the Soundpacks subfolder.</p>"},{"location":"main/visuals/#entities","title":"Entities","text":"<p>The Entities folder stores entities such as characters and speakers. Within it are two subfolders called Chars and Speakers</p>"},{"location":"main/visuals/#backgrounds","title":"Backgrounds","text":"<p>The Backgrounds folder stores backgrounds used in-game.</p>"},{"location":"main/songs/fats/","title":"Fats_","text":"<p>Main / Songs / Fats_</p>"},{"location":"main/songs/fats/#fats_","title":"Fats_","text":"<p>The fats system is used to extend a song's chart beyond roblox's string value limit.</p> <p>The fats system can also be used to extend a MIDI beyond roblox's string value limit.</p>"},{"location":"main/songs/fats/#usage","title":"Usage","text":"<p>To make use of the Fats_ system for charts you have to:</p> <ul> <li>Insert a folder into a Song Folder called \"Fats_\"</li> <li></li> </ul>"},{"location":"main/songs/ohio/","title":"Ohio","text":"<p>Songs / Ohio</p>"},{"location":"main/songs/ohio/#rizz-me-up","title":"rizz me up","text":"<p>^^^^^^^ has no riss</p> <p></p> <p>^^^^^^^^ way past cool</p>"},{"location":"main/songs/playlist/","title":"Playlist Module","text":"<p>Main / Songs / Playlist Module</p>"},{"location":"main/songs/playlist/#playlist-module","title":"Playlist Module","text":"<p>Contains all information about the game's playlists and some additional info.</p>"},{"location":"main/songs/song_attributes/","title":"Song Attributes","text":"<p>Main / Songs / Song Attributes</p>"},{"location":"main/songs/song_attributes/#song-attributes","title":"Song Attributes","text":"<p>Song Attributes are a part of the Song Instance, they contain important data neccesary for a song to function.</p>"},{"location":"main/songs/song_attributes/#song-attribute-list","title":"Song Attribute List","text":""},{"location":"main/songs/song_attributes/#main","title":"Main","text":"<ul> <li> <p>Player<sup><code>StringValue</code></sup> <sup> <code>Default: \"Man\"</code> </sup>      Character Value assigned to the Player Character in the song. </p> </li> <li> <p>Opponent<sup><code>StringValue</code></sup> <sup> <code>Default: \"Dad\"</code> </sup>      Character Value assigned to the Opponent Character in the song. </p> </li> <li> <p>Speakers<sup><code>StringValue</code></sup> <sup> <code>Default: \"Gal\"</code> </sup>      Character Value assigned to the Speakers. </p> </li> <li> <p>Scene<sup><code>StringValue</code></sup> <sup> <code>Default: \"FNF_Stage\"</code> </sup>      Background assigned to the song, strict name of the background folder from the backgrounds folder. </p> </li> <li> <p>ExtraPlayers<sup><code>StringValue</code></sup>      Example: <code>[[Man,1]]</code> </p> </li> <li> <p>ExtraOpponents<sup><code>StringValue</code></sup>      Example: <code>[[Dad,1]]</code> </p> </li> </ul>"},{"location":"main/songs/song_attributes/#sound","title":"Sound","text":"<ul> <li> <p>Inst<sup><code>SoundID</code></sup> The Intrumental for the Song. </p> </li> <li> <p>Inst Volume<sup><code>Float</code></sup> The Instrumental's Volume. </p> </li> <li> <p>BypassSpeedAdj<sup><code>Float</code></sup> The Value used to multiply the speed of all audio related to the song.  Used when a song had to be slowed down to avoid roblox moderation. </p> </li> </ul> <p></p> <ul> <li> <p>Voices<sup><code>SoundID</code></sup> The Audio for the Player Character. <sup><sup>(If a song has no split Voice Track, this is used for both Characters) <li> <p>VoicesVolume<sup><code>Float</code></sup> The Volume of the Voices Track. </p> </li> <li> <p>VoicesP2<sup><code>SoundID</code></sup> The Audio for the Opponent Character. </p> </li> <li> <p>VoicesP2Volume<sup><code>Float</code></sup> The Volume of the VoicesP2 Track. </p> </li>"},{"location":"main/songs/song_attributes/#ui-visuals","title":"UI Visuals","text":"<ul> <li> <p>NoteStyle<sup><code>StringValue</code></sup> <sup> <code>Default: \"Default\"</code> </sup>  Determines which note style the song should use. </p> </li> <li> <p>NoteScheme<sup><code>StringValue</code></sup> <sup> <code>Default: \"Default\"</code> </sup>  Determines which note color scheme the song should use. </p> </li> <li> <p>AspectRatio<sup><code>Float</code></sup> Determines the aspect ratio of the game frame. </p> </li> <li> <p>HitZonePos<sup><code>Vector2</code></sup> Determines the center position of the HitZones. </p> </li> <li> <p>HitZoneSize<sup><code>Float</code></sup> Determines the size of the HitZones. </p> </li> </ul>"},{"location":"main/songs/song_attributes/#misc","title":"Misc","text":"<ul> <li> <p>ModChart<sup><code>StringValue</code></sup>      Unknown </p> </li> <li> <p>SongKey<sup><code>StringValue</code></sup>     Unknown </p> </li> <li> <p>DeathZoom<sup><code>Float</code></sup>      Unknown </p> </li> <li> <p>DeathTag<sup><code>Float</code></sup>      Unknown </p> </li> </ul>"},{"location":"main/visuals/backgrounds/","title":"Backgrounds","text":"<p>Main / Visuals / Backgrounds</p>"},{"location":"main/visuals/backgrounds/#backgrounds","title":"Backgrounds","text":"<p>Backgrounds are everything that's displayed in the background during gameplay.</p> <p>Every background is composed of multiple assets:</p> <ul> <li> <p>Spawns <sup>(Determines where Entities are placed in the background.)</sup></p> </li> <li> <p>Background Sprites <sup>(Consists of Images or Spritesheets with Animation objects.)</sup></p> </li> </ul>"},{"location":"main/visuals/backgrounds/#formatting","title":"Formatting","text":"<p>All Background folders follow a specific way of formatting.</p> <p>A background's folder name includes a shortened version of a mod's name and the background's name seperated with an underscore:  </p> <p><code>ModTag_BackgroundName</code></p> <p>For Example, a mod with the name \"Arcade Showdown\" has the tag \"AS\". The name of one of the stages is \"Sanctuary\". If we were to make a Background folder using that information, it would be formatted as follows:  </p> <p><code>AS_Sanctuary</code></p>"},{"location":"main/visuals/backgrounds/#attributes","title":"Attributes","text":"<ul> <li>BGSize<sup><code>Vector2</code></sup> Adjusts the background's size. </li> </ul>"},{"location":"main/visuals/entities/","title":"Entities","text":"<p>Main / Visuals / Entities</p>"},{"location":"main/visuals/entities/#entities","title":"Entities","text":"<p>Entities are the character models for Opponents, Players and Speakers.</p> <p>There are two types of Entities:</p> <ul> <li>Chars <sup>(eg. Boyman and Dad)</sup></li> <li>Speakers <sup>(eg. Gal-Pal)</sup></li> </ul>"},{"location":"main/visuals/entities/#attributes","title":"Attributes","text":"<ul> <li> <p>FacingLeft<sup><code>Boolean</code></sup> A descriptor used to identify whether the character is facing left or not. For example, it is set to true for Boyman, and set to false for Dad. </p> </li> <li> <p>HealthIcon<sup><code>ImageID</code></sup> The ImageID that the entity is using for its health icon. </p> </li> <li> <p>IconRectPos<sup><code>Vector2</code> <code>(optional)</code></sup> The coordinates of the entity's health icon in the health icon spritesheet. The spritesheet uses the Image set in the <code>HealthIcon</code> attribute.</p> </li> </ul>"},{"location":"main/visuals/backgrounds/background_sprites/","title":"Background Sprites","text":"<p>Main / Visuals / Backgrounds / Background Sprites</p>"},{"location":"main/visuals/backgrounds/background_sprites/#background-sprites","title":"Background Sprites","text":"<p>Static or Animated objects located in a background.</p>"},{"location":"main/visuals/backgrounds/background_sprites/#attributes","title":"Attributes","text":"<ul> <li>Parallax <sup><code>Number</code></sup> Adjusts how much parallax is applied to the object. Goes from 0-100 percent, 0 meaning it is anchored to the camera, 100 meaning it is not affected by the camera's movement. </li> </ul>"},{"location":"main/visuals/backgrounds/spawns/","title":"Spawns","text":"<p>Main / Visuals / Backgrounds / Spawns</p>"},{"location":"main/visuals/backgrounds/spawns/#spawns","title":"Spawns","text":"<p>Determines where Entities are placed in the Background</p> <p>There are three Spawn Types:</p> <ul> <li> <p>OppPos_</p> </li> <li> <p>PlrPos_</p> </li> <li> <p>SpeakerPos_</p> </li> </ul>"},{"location":"main/visuals/backgrounds/spawns/#attributes","title":"Attributes","text":"<ul> <li> <p>CamXOffset <sup><code>Number</code></sup> Adjusts the Horizontal offset of the camera for that entity. </p> </li> <li> <p>CamYOffset <sup><code>Number</code></sup> Adjusts the Vertical offset of the camera for that entity. </p> </li> <li> <p>Scale <sup><code>Number</code></sup> Multiplies the size of the Entity based on the inputted number. </p> </li> </ul>"}]}